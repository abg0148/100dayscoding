Given an array of integers, 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.

Find all the elements that appear twice in this array.

Could you do it without extra space and in O(n) runtime?

Example:
Input:
[4,3,2,7,8,2,3,1]

Output:
[2,3]


/*
Solved using the logic convert the number at i-1 as negative and then if number is already -ve at i-1 then the number appeared twice. 
*/



class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int> output;
        for(int i=0;i<nums.size();i++){
            if(nums[abs(nums[i])-1]<0){
                output.push_back(abs(nums[i]));
            }
            nums[abs(nums[i])-1] = - nums[abs(nums[i])-1];
        }
        return output;
    }
};
